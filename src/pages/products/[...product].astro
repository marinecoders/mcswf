---
import Layout from '../../layouts/Layout.astro';
import Hero from '../../components/elements/Hero.svelte';
import FooterFull from '@components/FooterFull.svelte';
import MetricCard from '../../components/cards/MetricCard.svelte';
import { getCollection, type CollectionEntry } from 'astro:content';
import { displaySiteBanner } from '../../components/stores.js';
import '../../styles/global.css';

interface Props {
  entry: CollectionEntry<'products'>;
}

displaySiteBanner.set(false);

export async function getStaticPaths() {
  const products = await getCollection('products');
  return products.map((entry) => ({
    params: { product: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const metricLength = entry.data.metrics.length;
const bgString = 'background-image:url(' + entry.data.background.src + ')';
---

<Layout title={entry.data.product}>
  <Hero
    title={entry.data.product}
    description={entry.data.description}
    descriptionClasses="font-light lg:w-[1000px]"
    link="#"
    linkText="REQUEST APP DEMO"
    backgroundImg={entry.data.background.src}
  />
  <div class="relative z-20 items-center max-w-screen-xl lg:gap-20 gap-36 px-4 py-8 mx-auto lg:grid lg:grid-cols-2 lg:py-2 lg:px-6">
    <div class="grid gap-4 mt-8 grid-cols-1 hidden lg:block min-h-[650px]">
      <div class="w-full">
        <img
          class="object-cover m-auto"
          src={entry.data.image.src}
          alt={entry.data.image.alt}
        />
      </div>
    </div>
    <div class="grid gap-4 mt-8 grid-cols-1">
      <h2 class="mb-4 ml-8 text-2xl md:text-4xl font-extrabold tracking-tight text-left text-white">
        {entry.data.heading}
      </h2>
      <ul class="m-4 ml-12 list-disc text-xl md:text-2xl">
        {entry.data.bullets.map((b) => <li>{b}</li>)}
      </ul>
      <div class="grid grid-cols-1 lg:grid-cols-2 m-auto z-20">
        {
          entry.data.metrics.map((p) => (
            <div class="text-center my-12 mx-4">
              <MetricCard
                icon={p.icon}
                value={p.value}
                metric={p.metric}
              />
            </div>
          ))
        }
      </div>
      <div class="grid gap-4 my-4 grid-cols-1 lg:hidden relative h-max">
        <img
          class="w-full"
          src={entry.data.image.src}
          alt={entry.data.image.alt}
        />
      </div>
    </div>
  </div>

  <div class="relative z-20">
    <FooterFull client:only />
  </div>
</Layout>
